; idiotic bot, just keeps direction until it meets wall, then rotates right

(defn ws_get_map [world_state]
  (car world_state))
(defn ws_get_lman_state [world_state]
  (car (cdr world_state)))
(defn ws_get_ghosts [world_state]
  (car (cdr (cdr world_state))))
(defn ws_get_fruits [world_state]
  (car (cdr (cdr (cdr world_state)))))

(defn lman_get_location [lman_state]
  (car (cdr lman_state)))

(defn nth [n list]
  (if (= n 0)
    (car list)
    (nth (- n 1) (cdr list))))

(defn map_get [x y map]
  (nth x (nth y map)))

(defn next_x [direction x]
  (if (= direction 1)
    (+ x 1)
    (if (= direction 3)
      (- x 1)
      x)))
(defn next_y [direction y]
  (if (= direction 2)
    (+ y 1)
    (if (= direction 0)
      (- y 1)
      y)))

; run until wall is in front then rotate
; rotate happens very unsmart
(defn domove [direction world_state]
  (let [map (ws_get_map world_state)
	mypos (lman_get_location world_state)
	myposx (car mypos)
	myposy (car (cdr mypos))
	nextposx (next_x direction myposx)
	nextposy (next_y direction myposy)
	newdirection (if (= 0 (map_get nextposx nextposy map))
		       (if (= direction 3) 0 (+ 1 direction))
		       direction)]
    (cons direction newdirection)))

(defn main [world_state undoc]
  (cons 0 domove)
