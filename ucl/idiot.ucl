; -*- clojure -*-
; idiotic bot, just keeps direction until it meets wall, then rotates right

(include "gamedata.ucl")
(include "map.ucl")

(defn next_x [direction x]
  (if (= direction 1)
    (+ x 1)
    (if (= direction 3)
      (- x 1)
      x)))
(defn next_y [direction y]
  (if (= direction 2)
    (+ y 1)
    (if (= direction 0)
      (- y 1)
      y)))

; run until wall is in front then rotate
; rotate happens very unsmart
(defn domove [direction world_state]
  (let [map (worldstate_get_map world_state)
	lman_state (worldstate_get_lman_state world_state)]
    (let [mypos (lman_get_location lman_state)]
      (let [myposx (car mypos)
	    myposy (cdr mypos)]
	(let [nextposx (next_x direction myposx)
	      nextposy (next_y direction myposy)]
	  (let [newdirection (if (= 0 (map_get nextposx nextposy map))
			       (if (= direction 3) 0 (+ 1 direction))
  			       direction)]
  	    (cons direction newdirection)))))))

(defn main [world_state undoc]
  (cons 0 domove))

